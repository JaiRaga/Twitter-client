{"version":3,"sources":["../node_modules/moment-twitter/node_modules/moment/lang sync /^/.*$","component/routing/PrivateRoute.js","utils/setAuthToken.js","Redux/actions/auth.js","Redux/actions/types.js","component/layout/Navbar.js","component/profile/SideProfile.js","component/layout/Drawer.js","component/layout/Landing.js","component/auth/Login.js","component/auth/Register.js","Redux/actions/profile.js","component/profile/Profile.js","Redux/actions/tweet.js","component/utils/parseDate.js","component/comments/CommentItem.js","component/comments/Comment.js","component/comments/PostComment.js","component/tweets/TweetItem.js","component/tweets/Tweets.js","component/profile/ProfileContainer.js","component/tweet/PostTweetButton.js","component/tweet/Tweet.js","component/dashboard/Dashboard.js","component/Profiles/ProfileItem.js","component/Profiles/Profiles.js","component/Profiles/Followers.js","component/Profiles/Following.js","component/layout/GoBack.js","component/profile/Setting.js","Redux/reducers/auth.js","Redux/reducers/tweet.js","Redux/reducers/profile.js","Redux/rootReducer.js","Redux/store.js","App.js","theme.js","serviceWorker.js","index.js","img/raga.jpg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","PrivateRoute","Component","component","rest","useSelector","state","auth","loading","isAuthenticated","render","props","to","token","axios","defaults","headers","common","loadUser","dispatch","a","localStorage","setAuthToken","get","res","type","payload","data","logout","useStyles","makeStyles","theme","navbar","breakpoints","down","display","up","list","link","textDecoration","color","icons","minWidth","right","marginLeft","Navbar","classes","useDispatch","authLinks","List","className","ListItem","button","ListItemIcon","ListItemText","primary","onClick","guestLinks","AppBar","position","Toolbar","root","margin","spacing","small","width","height","back","padding","centerText","loadingSpinner","follow","marginTop","username","fontWeight","handle","SideProfile","user","useHistory","Grid","container","item","justify","size","direction","Avatar","alt","src","profilePic","caption","following","length","followers","grid","paddingBottom","paddingLeft","paddingRight","hamburger","title","SwipeableTemporaryDrawer","anchor","React","useState","left","setState","toggleDrawer","open","event","key","Typography","variant","Divider","IconButton","SwipeableDrawer","onClose","onOpen","role","onKeyDown","loginContainer","Login","email","password","loginState","setLoginState","onChange","target","name","value","onSubmit","preventDefault","config","body","JSON","stringify","post","login","alignItems","xs","TextField","label","Button","registerContainer","password2","registerState","setRegisterState","console","log","REGISTER_FAIL","registerUser","getFollowers","getFollowing","large","fontSize","Profile","history","useEffect","fullWidth","push","getAllTweets","clearTweets","err","parseDate","createdAt","t","Date","copyT","String","split","parse","now","d","moment","twitterShort","slice","backgroundColor","palette","background","paper","items","orange","getContrastText","deepOrange","purple","deepPurple","CommentItem","comment","text","date","Paper","elevation","Comment","comments","_id","PostComment","setComment","multiline","rowsMax","postComment","maxWidth","likeShareContainer","like","retweet","maringTop","marginBottom","tweet","expand","commentDisplay","TweetItem","owner","likes","liked","setLiked","retweets","setRetweet","commentToggle","setCommentToggle","setLike","tweetId","patch","removeLike","share","deTweet","reTweet","avatar","aria-label","prevState","disabled","Tweets","tweets","style","ProfileContainer","sm","md","PostTweetButton","submitHandler","textField","Tweet","setTweet","postTweet","Margin","Loading","Dashboard","error","Skeleton","animation","justifyContent","spaceLeft","ProfileItem","isFollowing","profile","filter","Layout","Spinner","Profiles","profiles","Followers","Following","GoBack","goBack","setting","backButton","input","update","main","form","Setting","setSetting","handleChange","setOpen","handleClose","handleSubmit","placeholder","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","formData","autoFocus","initialState","getItem","rootReducer","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","exact","path","Register","createMuiTheme","secondary","red","A400","default","Boolean","window","location","hostname","match","ReactDOM","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c09711aa.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 101,\n\t\"./ar-ma\": 102,\n\t\"./ar-ma.js\": 102,\n\t\"./ar.js\": 101,\n\t\"./bg\": 103,\n\t\"./bg.js\": 103,\n\t\"./br\": 104,\n\t\"./br.js\": 104,\n\t\"./bs\": 105,\n\t\"./bs.js\": 105,\n\t\"./ca\": 106,\n\t\"./ca.js\": 106,\n\t\"./cs\": 107,\n\t\"./cs.js\": 107,\n\t\"./cv\": 108,\n\t\"./cv.js\": 108,\n\t\"./cy\": 109,\n\t\"./cy.js\": 109,\n\t\"./da\": 110,\n\t\"./da.js\": 110,\n\t\"./de\": 111,\n\t\"./de.js\": 111,\n\t\"./el\": 112,\n\t\"./el.js\": 112,\n\t\"./en-au\": 113,\n\t\"./en-au.js\": 113,\n\t\"./en-ca\": 114,\n\t\"./en-ca.js\": 114,\n\t\"./en-gb\": 115,\n\t\"./en-gb.js\": 115,\n\t\"./eo\": 116,\n\t\"./eo.js\": 116,\n\t\"./es\": 117,\n\t\"./es.js\": 117,\n\t\"./et\": 118,\n\t\"./et.js\": 118,\n\t\"./eu\": 119,\n\t\"./eu.js\": 119,\n\t\"./fa\": 120,\n\t\"./fa.js\": 120,\n\t\"./fi\": 121,\n\t\"./fi.js\": 121,\n\t\"./fo\": 122,\n\t\"./fo.js\": 122,\n\t\"./fr\": 123,\n\t\"./fr-ca\": 124,\n\t\"./fr-ca.js\": 124,\n\t\"./fr.js\": 123,\n\t\"./gl\": 125,\n\t\"./gl.js\": 125,\n\t\"./he\": 126,\n\t\"./he.js\": 126,\n\t\"./hi\": 127,\n\t\"./hi.js\": 127,\n\t\"./hr\": 128,\n\t\"./hr.js\": 128,\n\t\"./hu\": 129,\n\t\"./hu.js\": 129,\n\t\"./id\": 130,\n\t\"./id.js\": 130,\n\t\"./is\": 131,\n\t\"./is.js\": 131,\n\t\"./it\": 132,\n\t\"./it.js\": 132,\n\t\"./ja\": 133,\n\t\"./ja.js\": 133,\n\t\"./ka\": 134,\n\t\"./ka.js\": 134,\n\t\"./ko\": 135,\n\t\"./ko.js\": 135,\n\t\"./lt\": 136,\n\t\"./lt.js\": 136,\n\t\"./lv\": 137,\n\t\"./lv.js\": 137,\n\t\"./ml\": 138,\n\t\"./ml.js\": 138,\n\t\"./mr\": 139,\n\t\"./mr.js\": 139,\n\t\"./ms-my\": 140,\n\t\"./ms-my.js\": 140,\n\t\"./nb\": 141,\n\t\"./nb.js\": 141,\n\t\"./ne\": 142,\n\t\"./ne.js\": 142,\n\t\"./nl\": 143,\n\t\"./nl.js\": 143,\n\t\"./nn\": 144,\n\t\"./nn.js\": 144,\n\t\"./pl\": 145,\n\t\"./pl.js\": 145,\n\t\"./pt\": 146,\n\t\"./pt-br\": 147,\n\t\"./pt-br.js\": 147,\n\t\"./pt.js\": 146,\n\t\"./ro\": 148,\n\t\"./ro.js\": 148,\n\t\"./ru\": 149,\n\t\"./ru.js\": 149,\n\t\"./sk\": 150,\n\t\"./sk.js\": 150,\n\t\"./sl\": 151,\n\t\"./sl.js\": 151,\n\t\"./sq\": 152,\n\t\"./sq.js\": 152,\n\t\"./sv\": 153,\n\t\"./sv.js\": 153,\n\t\"./th\": 154,\n\t\"./th.js\": 154,\n\t\"./tl-ph\": 155,\n\t\"./tl-ph.js\": 155,\n\t\"./tr\": 156,\n\t\"./tr.js\": 156,\n\t\"./tzm\": 157,\n\t\"./tzm-la\": 158,\n\t\"./tzm-la.js\": 158,\n\t\"./tzm.js\": 157,\n\t\"./uk\": 159,\n\t\"./uk.js\": 159,\n\t\"./uz\": 160,\n\t\"./uz.js\": 160,\n\t\"./vn\": 161,\n\t\"./vn.js\": 161,\n\t\"./zh-cn\": 162,\n\t\"./zh-cn.js\": 162,\n\t\"./zh-tw\": 163,\n\t\"./zh-tw.js\": 163\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 248;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated } = useSelector((state) => state.auth);\r\n  // console.log(rest);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import axios from \"axios\";\r\n\r\nexport default (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    axios.defaults.headers.common[\"Authorization\"] = null;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  CLEAR_TWEETS,\r\n  AUTH_ERROR,\r\n  PROFILE_ERROR\r\n} from \"./types\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/user/me\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const registerUser = ({ username, handle, email, password }) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ username, handle, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/register\", body, config);\r\n    console.log(res);\r\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({ REGISTER_FAIL });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/login\", body, config);\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({ type: LOGIN_FAIL });\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: CLEAR_TWEETS });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n// Update User Profile\r\nexport const updateProfile = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ ...formData });\r\n  try {\r\n    const res = await axios.patch(\"/api/user\", body, config);\r\n    console.log(res.data);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const GET_TWEETS = \"GET_TWEETS\";\r\nexport const GET_TWEETS_BY_ME = \"GET_TWEETS_BY_ME\";\r\nexport const GET_TWEETS_BY_USER = \"GET_TWEETS_BY_USER\";\r\nexport const POST_TWEET = \"POST_TWEET\";\r\nexport const DELETE_TWEET = \"DELETE_TWEET\";\r\nexport const CLEAR_TWEET = \"CLEAR_TWEET\";\r\nexport const CLEAR_TWEETS = \"CLEAR_TWEETS\";\r\nexport const TWEET_ERROR = \"TWEET_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const RETWEET = \"RETWEET\";\r\nexport const DETWEET = \"DETWEET\";\r\nexport const UPDATE_COMMENTS = \"GET_COMMENT\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const GET_FOLLOWERS = \"GET_FOLLOWERS\";\r\nexport const GET_FOLLOWING = \"GET_FOLLOWING\";\r\nexport const UPDATE_FOLLOWING = \"UPDATE_FOLLOWING\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const SHARE_ERROR = \"SHARE_ERROR\";\r\nexport const LIKE_ERROR = \"LIKE_ERROR\";\r\nexport const COMMENT_ERROR = \"COMMENT_ERROR\";\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../Redux/actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  list: {\r\n    display: \"flex\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\"\r\n  },\r\n  icons: {\r\n    color: \"white\",\r\n    minWidth: \"35px\"\r\n  },\r\n  right: {\r\n    display: \"flex\",\r\n    marginLeft: \"auto\"\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <List className={classes.list}>\r\n        <Link to='/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <TwitterIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Twitter' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <List className={classes.right}>\r\n        <Link to='/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/profile' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonPinIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Profile' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/landing' className={classes.link}>\r\n          <ListItem button onClick={() => dispatch(logout())}>\r\n            <ListItemIcon className={classes.icons}>\r\n              <DirectionsRunIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Logout' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <List className={classes.list}>\r\n        <Link to='/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <TwitterIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Twitter' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <List className={classes.right}>\r\n        <Link to='/login' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Login' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/register' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Register' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <AppBar position='static' className={classes.navbar}>\r\n      <Toolbar>{isAuthenticated && !loading ? authLinks : guestLinks}</Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  makeStyles,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PacmanLoader } from \"react-spinners\";\r\nimport profilePic from \"../../img/raga.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0)\r\n    }\r\n  },\r\n  small: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5)\r\n  },\r\n  back: {\r\n    // background: \"#556cd6\",\r\n    padding: 10\r\n  },\r\n  centerText: {\r\n    // margin: 3,\r\n    padding: 3\r\n  },\r\n  loadingSpinner: {\r\n    margin: 15,\r\n    padding: 15\r\n  },\r\n  follow: {\r\n    marginTop: 4\r\n  },\r\n  username: {\r\n    fontWeight: \"800\",\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  handle: {\r\n    margin: 0,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst SideProfile = () => {\r\n  const classes = useStyles();\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid container item>\r\n      {loading || user === null ? (\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          item\r\n          className={classes.loadingSpinner}>\r\n          <PacmanLoader loading color='#07ADEE' size={25} />\r\n        </Grid>\r\n      ) : (\r\n        <Grid container direction='column' item className={classes.back}>\r\n          <Grid item>\r\n            <div className={classes.root}>\r\n              <Avatar\r\n                alt={user.username}\r\n                src={profilePic}\r\n                className={classes.small}></Avatar>\r\n            </div>\r\n          </Grid>\r\n          <Grid container direction='column'>\r\n            <Grid className={classes.centerText} item>\r\n              <div className={classes.username}>{user.username}</div>\r\n            </Grid>\r\n            <Grid className={classes.centerText} item>\r\n              <div className={classes.handle}>@{user.handle}</div>\r\n            </Grid>\r\n            <Grid className={classes.centerText} item>\r\n              {user.caption}\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              justify='space-between'\r\n              className={classes.follow}\r\n              item>\r\n              <Grid item>{user.following.length} Following</Grid>\r\n              <Grid item>{user.followers.length} Followers</Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SideProfile;\r\n","import React, { Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport AdjustIcon from \"@material-ui/icons/Adjust\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../Redux/actions/auth\";\r\nimport SideProfile from \"../profile/SideProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 300\r\n  },\r\n  display: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    paddingBottom: 3,\r\n    paddingLeft: 20\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#1976d2\"\r\n  },\r\n  icons: {\r\n    color: \"#1976d2\",\r\n    minWidth: \"35px\",\r\n    paddingRight: 20\r\n  },\r\n  hamburger: {\r\n    color: \"white\"\r\n  },\r\n  title: {\r\n    fontWeight: \"800\",\r\n    padding: \"5px 16px\"\r\n  }\r\n}));\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ [anchor]: open });\r\n  };\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <Typography className={classes.title} color='primary' variant='body1'>\r\n        Account Info\r\n      </Typography>\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        <Link to='/profile' className={classes.link}>\r\n          <ListItem button>\r\n            {/* <ListItemIcon className={classes.icons}>\r\n              <TwitterIcon />\r\n            </ListItemIcon> */}\r\n            <SideProfile />\r\n            {/* <ListItemText primary='Twitter' /> */}\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      <List className={classes.right}>\r\n        <Link to='/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Home' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/profile' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonPinIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Profile' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/setting' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <AdjustIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Setting' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/landing' className={classes.link}>\r\n          <ListItem button onClick={() => dispatch(logout())}>\r\n            <ListItemIcon className={classes.icons}>\r\n              <DirectionsRunIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Logout' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <List className={classes.list}>\r\n        <Link to='/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <TwitterIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Twitter' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      <List className={classes.right}>\r\n        <Link to='/login' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Login' />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/register' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.icons}>\r\n              <PersonAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Register' />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role='presentation'\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}>\r\n      {isAuthenticated ? authLinks : guestLinks}\r\n    </div>\r\n  );\r\n  return (\r\n    <AppBar position='static' className={classes.display}>\r\n      <Toolbar>\r\n        <IconButton\r\n          className={classes.hamburger}\r\n          onClick={toggleDrawer(\"left\", true)}>\r\n          <DehazeIcon />\r\n        </IconButton>\r\n        <Typography className={classes.grid} variant='h6'>\r\n          Twitter\r\n        </Typography>\r\n        <SwipeableDrawer\r\n          anchor={\"left\"}\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}\r\n          onOpen={toggleDrawer(\"left\", true)}>\r\n          {list(\"left\")}\r\n        </SwipeableDrawer>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { CircleLoader } from \"react-spinners\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <h3>Landing</h3>\r\n        <CircleLoader loading size={60} color='blue' />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\"\r\n    }\r\n  },\r\n  loginContainer: {\r\n    marginTop: \"20px\"\r\n  }\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginState, setLoginState] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = loginState;\r\n\r\n  const onChange = (e) => {\r\n    setLoginState({ ...loginState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center'>\r\n      <Grid\r\n        className={classes.loginContainer}\r\n        container\r\n        item\r\n        xs={6}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'>\r\n        <Grid item>\r\n          <Typography variant='h5'>Login</Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          display='column'\r\n          justify='center'\r\n          alignItems='center'>\r\n          <form className={classes.root} onSubmit={onSubmit}>\r\n            <Grid item>\r\n              <TextField\r\n                id='email'\r\n                name='email'\r\n                label='email'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id='password'\r\n                name='password'\r\n                label='password'\r\n                variant='outlined'\r\n                type='password'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            type='submit'\r\n            color='primary'\r\n            variant='contained'\r\n            onClick={onSubmit}>\r\n            Let's Get Started\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant='subtitle2' className={classes.loginContainer}>\r\n            Don't have an account? <Link to='/register'>Sign Up</Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../Redux/actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\"\r\n    }\r\n  },\r\n  registerContainer: {\r\n    marginTop: \"20px\"\r\n  }\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const [registerState, setRegisterState] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    handle: \"\"\r\n  });\r\n\r\n  const { handle, username, email, password, password2 } = registerState;\r\n\r\n  const onChange = (e) =>\r\n    setRegisterState({ ...registerState, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2) {\r\n      console.log(\"Password do not match\");\r\n    } else {\r\n      dispatch(registerUser({ username, email, handle, password }));\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center'>\r\n      <Grid\r\n        className={classes.registerContainer}\r\n        container\r\n        item\r\n        xs={6}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'>\r\n        <Grid item>\r\n          <Typography variant='h5'>Register</Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          display='column'\r\n          justify='center'\r\n          alignItems='center'>\r\n          <form className={classes.root}>\r\n            <Grid item>\r\n              <TextField\r\n                id='username'\r\n                name='username'\r\n                label='Username'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id='email'\r\n                name='email'\r\n                label='Email'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id='handle'\r\n                name='handle'\r\n                label='handle'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id='password'\r\n                name='password'\r\n                label='password'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id='password2'\r\n                name='password2'\r\n                label='re-enter password'\r\n                variant='outlined'\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            type='submit'\r\n            onClick={onSubmit}>\r\n            Let's Get Started\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant='subtitle2' className={classes.registerContainer}>\r\n            Don't have an account? <Link to='/login'>Sign Up</Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_PROFILE,\r\n  AUTH_ERROR,\r\n  UPDATE_PROFILE,\r\n  PROFILE_ERROR,\r\n  GET_FOLLOWERS,\r\n  GET_FOLLOWING,\r\n  UPDATE_FOLLOWING\r\n} from \"./types\";\r\n\r\n// Get Followers\r\nexport const getFollowers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/followers\");\r\n    dispatch({ type: GET_FOLLOWERS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n\r\n// Get Following\r\nexport const getFollowing = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/following\");\r\n    dispatch({ type: GET_FOLLOWING, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n\r\n// Follow User\r\nexport const followUser = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.post(`/api/follow/${id}`);\r\n    console.log(res.data);\r\n    // dispatch({ type: UPDATE_FOLLOWING, payload: res.data });\r\n    dispatch(getFollowing());\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n\r\n// Un-Follow User\r\nexport const unFollowUser = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.post(`/api/unfollow/${id}`);\r\n    // dispatch({ type: UPDATE_FOLLOWING, payload: res.data });\r\n    dispatch(getFollowing());\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n\r\n// Get User\r\nexport const fetchProfileById = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/user/${id}`);\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, Avatar, makeStyles, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PacmanLoader } from \"react-spinners\";\r\nimport profilePic from \"../../img/raga.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFollowers, getFollowing } from \"../../Redux/actions/profile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20)\r\n  },\r\n  back: {\r\n    padding: 10\r\n  },\r\n  padding: {\r\n    paddingLeft: 10\r\n  },\r\n  loadingSpinner: {\r\n    margin: 15,\r\n    padding: 15\r\n  },\r\n  follow: {\r\n    marginTop: 25\r\n  },\r\n  username: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"24px\",\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  handle: {\r\n    margin: 0,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getFollowers());\r\n    dispatch(getFollowing());\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container item>\r\n      {loading || user === null ? (\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          item\r\n          className={classes.loadingSpinner}>\r\n          <PacmanLoader loading color='#07ADEE' size={25} />\r\n        </Grid>\r\n      ) : (\r\n        <Grid container direction='column' item className={classes.back}>\r\n          <Grid container alignItems='center' item>\r\n            <Grid item>\r\n              <div className={classes.root}>\r\n                <Avatar\r\n                  alt={user.username}\r\n                  src={profilePic}\r\n                  className={classes.large}></Avatar>\r\n              </div>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction='column'\r\n                className={classes.padding}\r\n                item>\r\n                <Grid className={classes.username} item>\r\n                  {user.username}\r\n                </Grid>\r\n                <Grid className={classes.handle} item>\r\n                  @{user.handle}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              fullWidth\r\n              onClick={() => history.push(\"/setting\")}>\r\n              Edit Profile\r\n            </Button>\r\n          </Grid>\r\n          <Grid container direction='column' alignItems='center'>\r\n            <Grid className={classes.padding} item>\r\n              {user.caption}\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              justify='space-evenly'\r\n              className={classes.follow}\r\n              item>\r\n              {user.following.length}\r\n              <Button\r\n                color='primary'\r\n                fullWidth\r\n                onClick={() => history.push(\"/following\")}>\r\n                Following\r\n              </Button>\r\n\r\n              {user.followers.length}\r\n              <Button\r\n                color='primary'\r\n                fullWidth\r\n                onClick={() => history.push(\"/followers\")}>\r\n                Followers\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TWEETS,\r\n  POST_TWEET,\r\n  GET_TWEETS_BY_ME,\r\n  GET_TWEETS_BY_USER,\r\n  TWEET_ERROR,\r\n  AUTH_ERROR,\r\n  CLEAR_TWEETS,\r\n  DELETE_TWEET,\r\n  UPDATE_LIKES,\r\n  RETWEET,\r\n  UPDATE_COMMENTS,\r\n  COMMENT_ERROR,\r\n  LIKE_ERROR,\r\n  SHARE_ERROR,\r\n  POST_COMMENT\r\n} from \"./types\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Get all tweets on dashboard\r\nexport const getAllTweets = () => async (dispatch) => {\r\n  try {\r\n    // dispatch(clearTweets());\r\n    const res = await axios.get(\"/api/tweets\");\r\n    console.log(\"Public\");\r\n    dispatch({\r\n      type: GET_TWEETS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: TWEET_ERROR });\r\n  }\r\n};\r\n\r\n// Clear all Tweets\r\nexport const clearTweets = () => async (dispatch) => {\r\n  try {\r\n    console.log(\"clear\");\r\n    dispatch({ type: CLEAR_TWEETS });\r\n  } catch (err) {\r\n    dispatch({ type: TWEET_ERROR });\r\n  }\r\n};\r\n\r\n// Get tweets by me\r\nexport const getTweetsByMe = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/tweets/me\");\r\n    console.log(\"Me\");\r\n    dispatch({\r\n      type: GET_TWEETS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Get tweet by a User\r\n\r\n// Add/Post tweet\r\nexport const postTweet = (tweet) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ text: tweet });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/tweet\", body, config);\r\n    dispatch({ type: POST_TWEET, payload: res.data });\r\n    // dispatch(getAllTweets());\r\n  } catch (err) {\r\n    dispatch({ type: TWEET_ERROR });\r\n  }\r\n};\r\n\r\n// Delete tweet\r\nexport const deleteTweet = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/tweet/${id}`);\r\n\r\n    dispatch({ type: DELETE_TWEET, payload: id });\r\n  } catch (err) {\r\n    dispatch({ type: TWEET_ERROR });\r\n  }\r\n};\r\n\r\n// Add Like\r\nexport const addLike = (tweetId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/like/${tweetId}`);\r\n    console.log(res.data);\r\n    dispatch({ type: UPDATE_LIKES, payload: { tweetId, likes: res.data } });\r\n  } catch (err) {\r\n    dispatch({ type: LIKE_ERROR });\r\n  }\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = (tweetId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/unlike/${tweetId}`);\r\n    console.log(res.data);\r\n    dispatch({ type: UPDATE_LIKES, payload: { tweetId, likes: res.data } });\r\n  } catch (err) {\r\n    dispatch({ type: LIKE_ERROR });\r\n  }\r\n};\r\n\r\n// Add Comment\r\nexport const postComment = (id, comment) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ text: comment });\r\n\r\n  try {\r\n    const res = await axios.post(`/api/comment/${id}`, body, config);\r\n    dispatch({ type: UPDATE_COMMENTS, payload: { id, comments: res.data } });\r\n    // dispatch(getComments(id));\r\n  } catch (err) {\r\n    dispatch({ type: COMMENT_ERROR });\r\n  }\r\n};\r\n\r\n// Remove Comment\r\n\r\n// Share Tweet\r\nexport const reTweet = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/retweet/${id}`);\r\n    console.log(res.data);\r\n    dispatch({ type: RETWEET, payload: { id, retweets: res.data } });\r\n  } catch (err) {\r\n    dispatch({ type: SHARE_ERROR });\r\n  }\r\n};\r\n\r\n// UnShare Tweet\r\nexport const deTweet = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/detweet/${id}`);\r\n    console.log(res.data);\r\n    dispatch({ type: RETWEET, payload: { id, retweets: res.data } });\r\n  } catch (err) {\r\n    dispatch({ type: SHARE_ERROR });\r\n  }\r\n};\r\n","import moment from \"moment-twitter\";\r\n\r\nconst parseDate = (createdAt) => {\r\n  let t = createdAt;\r\n  t = new Date(t);\r\n\r\n  let copyT = String(t);\r\n  copyT = copyT.split(\" \");\r\n\r\n  t = Date.parse(t);\r\n  t = Date.now() - t;\r\n\r\n  let d = moment(moment() + t)\r\n    .twitterShort()\r\n    .split(\"\");\r\n\r\n  return d.slice(-1)[0] === \"m\" ||\r\n    d.slice(-1)[0] === \"s\" ||\r\n    (d[1] === \"d\" && d[0] <= 6)\r\n    ? moment(moment() + t).twitterShort()\r\n    : copyT[2] + \" \" + copyT[1];\r\n};\r\n\r\nexport default parseDate;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Avatar,\r\n  Divider,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\r\nimport parseDate from \"../utils/parseDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  spacing: {\r\n    // paggingTop: 5,\r\n    margin: 10\r\n  },\r\n  items: {\r\n    padding: 5\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500]\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500]\r\n  },\r\n  username: {\r\n    fontWeight: \"700\"\r\n  }\r\n}));\r\n\r\nconst CommentItem = ({ comment }) => {\r\n  const classes = useStyles();\r\n  const { username, handle } = comment.user;\r\n  const { text, date } = comment;\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.spacing}>\r\n      <Grid container item alignItems='center' className={classes.root}>\r\n        <Grid item className={classes.items}>\r\n          <Avatar className={classes.purple}>R</Avatar>\r\n        </Grid>\r\n        <Grid item className={classes.items}>\r\n          <Grid container item direction='column'>\r\n            <Grid item>\r\n              <Typography variant='subtitle1' className={classes.username}>\r\n                {username}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant='caption'>@{handle}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>{parseDate(date)}</Grid>\r\n        {/* <Divider orientation='vertical' /> */}\r\n\r\n        <Grid item className={classes.items}>\r\n          <Grid container item>\r\n            {text}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nconst Comment = ({ comments }) => {\r\n  return (\r\n    <Grid container item direction='column'>\r\n      {comments.map((comment) => (\r\n        <CommentItem key={comment._id} comment={comment} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../Redux/actions/tweet\";\r\n\r\nconst PostComment = ({ id }) => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleComment = (e) => setComment(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(postComment(id, comment));\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <Grid container item>\r\n      <TextField\r\n        id='comment'\r\n        name='comment'\r\n        label='Leave a Comment'\r\n        type='text'\r\n        value={comment}\r\n        variant='outlined'\r\n        multiline\r\n        rowsMax={4}\r\n        fullWidth\r\n        onChange={handleComment}\r\n      />\r\n\r\n      <Button color='primary' fullWidth onClick={onSubmit}>\r\n        Post\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PostComment;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Avatar,\r\n  IconButton,\r\n  Divider,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport profilePic from \"../../img/raga.jpg\";\r\nimport {\r\n  addLike,\r\n  removeLike,\r\n  reTweet,\r\n  deTweet,\r\n  getComments\r\n} from \"../../Redux/actions/tweet\";\r\nimport Comment from \"../comments/Comment\";\r\nimport PostComment from \"../comments/PostComment\";\r\nimport parseDate from \"../utils/parseDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    },\r\n    width: \"100%\",\r\n    maxWidth: \"100%\"\r\n  },\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4)\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  likeShareContainer: {\r\n    marginTop: 10\r\n    // maxWidth: \"100%\",\r\n  },\r\n  username: {\r\n    fontWeight: \"700\"\r\n  },\r\n  handle: {\r\n    // fontWeight: \"100\"\r\n  },\r\n  like: {\r\n    color: \"#fa1616\",\r\n    backgroundColor: \"#fa161619\"\r\n  },\r\n  retweet: {\r\n    // color: \"#01a9b4\",\r\n    // backgroundColor: \"#01a9b411\"\r\n    color: \"#1976d2\",\r\n    backgroundColor: \"#1976d211\"\r\n  },\r\n  comment: {\r\n    color: \"#12cad6\",\r\n    backgroundColor: \"#12cad619\"\r\n  },\r\n  paper: {\r\n    maringTop: 10,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    padding: 25\r\n  },\r\n  tweet: {\r\n    marginTop: 10\r\n  },\r\n  marginTop: {\r\n    marginTop: 2\r\n  },\r\n  expand: {\r\n    marginLeft: \"auto\",\r\n    marginBottom: 20\r\n  },\r\n  commentDisplay: {\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst TweetItem = ({ tweet }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const loading = useSelector((state) => state.tweet.loading);\r\n  const authUser = useSelector((state) => state.auth.user);\r\n  const comments = tweet.comments;\r\n  const user = tweet.owner;\r\n\r\n  const [liked, setLiked] = useState(!!tweet.likes.length);\r\n  const [retweet, setRetweet] = useState(!!tweet.retweets.length);\r\n  const [comment, setComment] = useState(false);\r\n  const [commentToggle, setCommentToggle] = useState(false);\r\n  const [title, setTitle] = useState(\"Edit\");\r\n\r\n  const setLike = (id) => {\r\n    let likes = tweet.likes.map((like) => like._id === id);\r\n    console.log(tweet.likes.map((like) => like._id === id, likes));\r\n    if (likes.length === 0 && !liked) {\r\n      setLiked(true);\r\n      dispatch(addLike(id));\r\n    } else if (liked && likes.length > 0) {\r\n      setLiked(false);\r\n      dispatch(removeLike(id));\r\n    }\r\n  };\r\n\r\n  const share = (id) => {\r\n    let retweets = tweet.retweets.map((retweet) => retweet._id === id);\r\n    console.log(retweets);\r\n    if (retweets.length === 0 && !retweet) {\r\n      setRetweet(true);\r\n      dispatch(reTweet(id));\r\n    } else if (retweet && retweets.length > 0) {\r\n      setRetweet(false);\r\n      dispatch(deTweet(id));\r\n    }\r\n  };\r\n\r\n  // Toggles comment display\r\n  const toggleCommentHandler = () => {\r\n    commentToggle ? setCommentToggle(false) : setCommentToggle(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        {loading || user === null ? (\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            justify='center'\r\n            alignItems='center'\r\n            item\r\n            className={classes.loadingSpinner}>\r\n            <RingLoader loading color='#6A07EE' size={25} />\r\n          </Grid>\r\n        ) : (\r\n          <Grid container item>\r\n            <Grid item className={classes.root}>\r\n              <Avatar\r\n                alt={user.username}\r\n                src={user.avatar}\r\n                className={classes.small}\r\n              />\r\n              <Grid container item direction='column'>\r\n                <Grid container item spacing={1}>\r\n                  <Grid item>\r\n                    <Typography variant='h5' className={classes.username}>\r\n                      {user.username}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item className={classes.marginTop}>\r\n                    <Typography variant='body1' className={classes.handle}>\r\n                      @{user.handle}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item className={classes.marginTop}>\r\n                    <Typography variant='caption'>\r\n                      {parseDate(tweet.createdAt)}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {/* <Grid item className={classes.expand}>\r\n                    <Tooltip title={title}>\r\n                      <IconButton aria-label='expand-more'>\r\n                        <ExpandMoreIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid> */}\r\n                </Grid>\r\n                <Divider />\r\n                <Grid item className={classes.tweet}>\r\n                  {tweet.text}\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  justify='space-between'\r\n                  className={classes.likeShareContainer}>\r\n                  <Grid item>\r\n                    <IconButton\r\n                      aria-label='like'\r\n                      className={classes.like}\r\n                      onClick={() => setLike(tweet._id)}>\r\n                      {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n                    </IconButton>\r\n                    {tweet.likes.length > 0 ? (\r\n                      <Typography variant='button' className={classes.like}>\r\n                        {tweet.likes.length}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <IconButton\r\n                      aria-label='retweet'\r\n                      className={classes.retweet}\r\n                      onClick={() => share(tweet._id)}>\r\n                      {retweet ? <RepeatOneIcon /> : <RepeatIcon />}\r\n                    </IconButton>\r\n                    {tweet.retweets.length > 0 ? (\r\n                      <Typography variant='button' className={classes.retweet}>\r\n                        {tweet.retweets.length}\r\n                      </Typography>\r\n                    ) : null}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {tweet.retweets.length > 0 ? (\r\n                      <Typography variant='button' className={classes.comment}>\r\n                        {comments.length}\r\n                      </Typography>\r\n                    ) : null}\r\n                    <IconButton\r\n                      aria-label='comment'\r\n                      className={classes.comment}\r\n                      onClick={() => setComment((prevState) => !prevState)}>\r\n                      {comment ? <CommentIcon /> : <AddCommentIcon />}\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Paper>\r\n\r\n      {comment ? <PostComment id={tweet._id} /> : null}\r\n\r\n      <Button\r\n        fullWidth\r\n        disabled={comments.length === 0}\r\n        color='primary'\r\n        onClick={toggleCommentHandler}\r\n        className={classes.commentDisplay}>\r\n        {commentToggle\r\n          ? \"Hide Comments\"\r\n          : comments.length > 1\r\n          ? comments.length - 1 + \"+ comments\"\r\n          : comments.length + \" comment\"}\r\n      </Button>\r\n\r\n      {commentToggle ? <Comment comments={comments} /> : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TweetItem;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport TweetItem from \"./TweetItem\";\r\n\r\nconst Tweets = ({ tweets }) => {\r\n  return (\r\n    <Grid container item>\r\n      {tweets.map((tweet) => (\r\n        <TweetItem key={tweet._id} tweet={tweet} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircleLoader } from \"react-spinners\";\r\nimport Profile from \"./Profile\";\r\nimport { getTweetsByMe, clearTweets } from \"../../Redux/actions/tweet\";\r\nimport Tweets from \"../tweets/Tweets\";\r\n\r\nconst style = (theme) => ({\r\n  Grid: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nconst ProfileContainer = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTweetsByMe());\r\n\r\n    return () => {\r\n      dispatch(clearTweets());\r\n      // dispatch(getAllTweets());\r\n    };\r\n  }, []);\r\n\r\n  const tweet = useSelector((state) => state.tweet);\r\n  const { loading, tweets } = tweet;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      style={style.Grid}\r\n      justify='center'\r\n      alignItems='center'>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={5}\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        spacing={4}>\r\n        <Profile />\r\n        <Grid container item justify='center'>\r\n          {loading || !tweets ? (\r\n            <CircleLoader loading color='#1976d2' />\r\n          ) : (\r\n            <Tweets tweets={tweets} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst PostTweetButton = ({ submitHandler }) => {\r\n  return (\r\n    <Grid item>\r\n      <Button onClick={submitHandler} variant='contained' color='primary'>\r\n        Tweet\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PostTweetButton;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport profilePic from \"../../img/raga.jpg\";\r\nimport PostTweetButton from \"./PostTweetButton\";\r\nimport { postTweet } from \"../../Redux/actions/tweet\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  large: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    marginTop: \"40px\"\r\n  },\r\n  margin: {\r\n    marginBottom: 10\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    maxWidth: \"100%\"\r\n  }\r\n}));\r\n\r\nconst Tweet = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [tweet, setTweet] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setTweet(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(postTweet(tweet));\r\n    setTweet(\"\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={3} className={classes.margin}>\r\n        <Grid container item>\r\n          <Grid item className={classes.root}>\r\n            <Avatar alt='username' src={profilePic} className={classes.large} />\r\n            <Grid container item spacing={8}>\r\n              <Grid item className={classes.textField}>\r\n                <form>\r\n                  <TextField\r\n                    fullWidth\r\n                    name='tweet'\r\n                    id='tweet'\r\n                    label=\"What's happening?\"\r\n                    value={tweet}\r\n                    onChange={onChange}></TextField>\r\n                </form>\r\n              </Grid>\r\n              <Grid container item>\r\n                <PostTweetButton submitHandler={submitHandler} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Tweets from \"../tweets/Tweets\";\r\nimport Tweet from \"../tweet/Tweet\";\r\nimport {\r\n  getAllTweets,\r\n  clearTweets,\r\n  getTweetsByMe\r\n} from \"../../Redux/actions/tweet\";\r\nimport { getFollowers, getFollowing } from \"../../Redux/actions/profile\";\r\n\r\nconst style = {\r\n  Margin: {\r\n    marginTop: 10\r\n  },\r\n  Loading: {\r\n    marginBottom: 10\r\n  }\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const tweet = useSelector((state) => state.tweet);\r\n  const { loading, tweets, error } = tweet;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTweets());\r\n    dispatch(getFollowers());\r\n    dispatch(getFollowing());\r\n    console.log(\"dash\");\r\n\r\n    return () => {\r\n      dispatch(clearTweets());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center' style={style.Margin}>\r\n      <Grid container direction='column' spacing={2} item xs={12} sm={8} md={5}>\r\n        <Tweet />\r\n        {loading || !tweets.length ? (\r\n          <Fragment>\r\n            <Skeleton\r\n              variant='rect'\r\n              style={style.Loading}\r\n              animation='wave'\r\n              height={200}\r\n            />\r\n            <Skeleton variant='rect' style={style.Loading} height={200} />\r\n            <Skeleton\r\n              variant='rect'\r\n              style={style.Loading}\r\n              animation='wave'\r\n              height={200}\r\n            />\r\n          </Fragment>\r\n        ) : (\r\n          <Tweets tweets={tweets} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Avatar,\r\n  Paper,\r\n  Button,\r\n  makeStyles,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { SyncLoader } from \"react-spinners\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport profilePic from \"../../img/raga.jpg\";\r\nimport { followUser, unFollowUser } from \"../../Redux/actions/profile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  spaceLeft: {\r\n    marginLeft: \"auto\"\r\n  }\r\n}));\r\n\r\nconst ProfileItem = ({ user }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const following = useSelector((state) => state.profile.following);\r\n  const isFollowing = following.filter((follow) => follow._id === user._id);\r\n  console.log(isFollowing);\r\n  return (\r\n    <Fragment>\r\n      <Grid container item justify='center'>\r\n        <Grid item className={classes.root}>\r\n          <Avatar alt='username' src={user.avatar} />\r\n          <Grid container item direction='column' xs={5}>\r\n            <Grid item>\r\n              <Typography variant='h6'>{user.username}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant='subtitle2'>@{user.handle}</Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography variant='body1'>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo\r\n                eius voluptate praesentium, corrupti ipsa voluptates.\r\n                {/* {user.caption ? user.caption : \"No caption Avaliable..\"} */}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item className={classes.spaceLeft}>\r\n            {/* <Button\r\n              color='primary'\r\n              onClick={() =>\r\n                isFollowing\r\n                  ? dispatch(followUser(user._id))\r\n                  : dispatch(unFollowUser(user._id))\r\n              }></Button> */}\r\n            {isFollowing.length > 0 ? (\r\n              <Button\r\n                color='primary'\r\n                onClick={() => dispatch(unFollowUser(user._id))}>\r\n                Following\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color='primary'\r\n                variant='contained'\r\n                onClick={() => dispatch(followUser(user._id))}>\r\n                Follow\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { Grid, Typography, IconButton, Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { SyncLoader } from \"react-spinners\";\r\n\r\nconst style = {\r\n  Layout: {\r\n    marginLeft: 7\r\n  },\r\n  Spinner: {\r\n    margin: \"10%\"\r\n  }\r\n};\r\n\r\nconst Profiles = ({ profiles }) => {\r\n  const history = useHistory();\r\n  const loading = useSelector((state) => state.profile.loading);\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item style={style.Layout}>\r\n        <IconButton\r\n          aria-label='back-button'\r\n          color='secondary'\r\n          onClick={() => history.push(\"/profile\")}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid container item direction='column' style={style.Layout}>\r\n          <Grid item>\r\n            <Typography variant='h5'>{user.username}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='caption'>@{user.handle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item direction='column'>\r\n        <Grid container item justify='space-evenly'>\r\n          <Button onClick={() => history.push(\"/followers\")}>Followers</Button>\r\n          <Button onClick={() => history.push(\"/following\")}>Following</Button>\r\n        </Grid>\r\n        <Grid container item justify='center'>\r\n          {loading ? (\r\n            <Grid item style={style.Spinner}>\r\n              <SyncLoader loading size={15} color='#1976d2' />\r\n            </Grid>\r\n          ) : (\r\n            <Grid item>\r\n              {profiles.length !== 0 ? (\r\n                profiles.map((profile) => <ProfileItem user={profile} />)\r\n              ) : (\r\n                <Typography variant='h5'>No Users..</Typography>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Button } from \"@material-ui/core\";\r\nimport Profiles from \"./Profiles\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Followers = () => {\r\n  const followers = useSelector((state) => state.profile.followers);\r\n  return (\r\n    <Grid container>\r\n      <Profiles profiles={followers} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Followers;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Button } from \"@material-ui/core\";\r\nimport Profiles from \"./Profiles\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Following = () => {\r\n  const following = useSelector((state) => state.profile.following);\r\n  return (\r\n    <Grid item>\r\n      <Profiles profiles={following} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Following;\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoBack = ({ fullWidth }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container justify='flex-start' item>\r\n      <Button fullWidth={fullWidth} onClick={() => history.goBack()}>\r\n        Go Back\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GoBack;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from \"@material-ui/core\";\r\n// import { fetchProfile, updateProfile } from \"../../Redux/actions/profile\";\r\nimport { updateProfile } from \"../../Redux/actions/auth\";\r\n\r\nimport GoBack from \"../layout/GoBack\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  setting: {},\r\n  backButton: {\r\n    width: \"100%\",\r\n    marginTop: 5,\r\n    marginBottom: 20\r\n  },\r\n  input: {\r\n    marginBottom: 10\r\n  },\r\n  update: {\r\n    marginTop: 17,\r\n    marginLeft: 15\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.update.main\r\n  },\r\n  form: {\r\n    padding: 5,\r\n    margin: 5\r\n  }\r\n}));\r\n\r\nconst Setting = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  let { username, handle, email, avatar } = user;\r\n  console.log(username, handle, email, avatar);\r\n\r\n  const [setting, setSetting] = useState({\r\n    username,\r\n    handle,\r\n    email,\r\n    avatar\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setSetting({ ...setting, [e.target.name]: e.target.value });\r\n    console.log(setting);\r\n  };\r\n\r\n  // For Dialog modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(updateProfile(setting));\r\n    setOpen(false);\r\n    console.log(setting);\r\n  };\r\n\r\n  return (\r\n    <Grid container justify='center' alignItems='center'>\r\n      <Grid\r\n        container\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        item\r\n        xs={10}\r\n        md={8}>\r\n        <Grid item className={classes.backButton}>\r\n          <GoBack fullWidth />\r\n        </Grid>\r\n        <form>\r\n          <Grid container item direction='column' justify='center'>\r\n            <Grid container item>\r\n              <Grid item>\r\n                <TextField\r\n                  id='username'\r\n                  name='username'\r\n                  label='Username'\r\n                  placeholder='Change Username'\r\n                  value={setting.username}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.update}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  onClick={handleSubmit}>\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item>\r\n              <Grid item>\r\n                <TextField\r\n                  id='handle'\r\n                  name='handle'\r\n                  label='handle'\r\n                  placeholder='Change Handle'\r\n                  value={setting.handle}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.update}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  onClick={handleSubmit}>\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item>\r\n              <Grid item>\r\n                <TextField\r\n                  id='email'\r\n                  name='email'\r\n                  label='Email'\r\n                  placeholder='Change Email'\r\n                  value={setting.email}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.update}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  onClick={handleSubmit}>\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item>\r\n              <Grid item>\r\n                <TextField\r\n                  id='avatar'\r\n                  name='avatar'\r\n                  label='Avatar'\r\n                  placeholder='Change Avatar'\r\n                  value={setting.avatar}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                />\r\n              </Grid>\r\n              <Grid item className={classes.update}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  onClick={handleSubmit}>\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        {/* Dialog modal */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby='alert-dialog-title'\r\n          aria-describedby='alert-dialog-description'>\r\n          <DialogTitle id='alert-dialog-title'>\r\n            {\"Do You Wish to Proceed?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id='alert-dialog-description'>\r\n              Changes made here will Over Write existing User data. Do you Wish\r\n              to Proceed?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color='primary'>\r\n              Disagree\r\n            </Button>\r\n            <Button onClick={handleUpdate} color='primary' autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  AUTH_ERROR\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  user: null,\r\n  isAuthenticated: null,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TWEETS,\r\n  GET_TWEETS_BY_ME,\r\n  GET_TWEETS_BY_USER,\r\n  CLEAR_TWEET,\r\n  CLEAR_TWEETS,\r\n  POST_TWEET,\r\n  DELETE_TWEET,\r\n  UPDATE_LIKES,\r\n  RETWEET,\r\n  UPDATE_COMMENTS,\r\n  POST_COMMENT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  tweet: null,\r\n  tweets: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_TWEETS:\r\n      return {\r\n        ...state,\r\n        tweets: payload,\r\n        loading: false\r\n      };\r\n\r\n    case POST_TWEET:\r\n      return {\r\n        ...state,\r\n        tweets: [payload, ...state.tweets],\r\n        loading: false\r\n      };\r\n\r\n    case DELETE_TWEET:\r\n      return {\r\n        ...state,\r\n        tweets: state.tweets.filter((tweet) => tweet._id !== payload),\r\n        loading: false\r\n      };\r\n\r\n    case CLEAR_TWEET:\r\n      return {\r\n        ...state,\r\n        tweet: null,\r\n        loading: true\r\n      };\r\n\r\n    case CLEAR_TWEETS:\r\n      return {\r\n        ...state,\r\n        tweets: [],\r\n        loading: true\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        tweets: state.tweets.map((tweet) =>\r\n          tweet._id === payload.tweetId\r\n            ? { ...tweet, likes: [...payload.likes] }\r\n            : tweet\r\n        ),\r\n        loading: false\r\n      };\r\n\r\n    case RETWEET:\r\n      return {\r\n        ...state,\r\n        tweets: state.tweets.map((tweet) =>\r\n          tweet._id === payload.id\r\n            ? { ...tweet, retweets: [...payload.retweets] }\r\n            : tweet\r\n        ),\r\n        loading: false\r\n      };\r\n\r\n    case UPDATE_COMMENTS:\r\n      return {\r\n        ...state,\r\n        tweets: state.tweets.map((tweet) =>\r\n          tweet._id === payload.id\r\n            ? { ...tweet, comments: [...payload.comments] }\r\n            : tweet\r\n        ),\r\n        loading: false\r\n      };\r\n\r\n    // case POST_COMMENT:\r\n    //   return {\r\n    //     ...state,\r\n    //     tweets: state.tweets.map((tweet) =>\r\n    //       tweet._id === payload.id\r\n    //         ? { ...tweet, comments: [...payload.comment] }\r\n    //         : tweet\r\n    //     ),\r\n    //     loading: false\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_PROFILE,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_FOLLOWERS,\r\n  GET_FOLLOWING,\r\n  UPDATE_FOLLOWING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  followers: [],\r\n  following: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_FOLLOWERS:\r\n      return {\r\n        ...state,\r\n        followers: [...payload],\r\n        loading: false\r\n      };\r\n\r\n    case GET_FOLLOWING:\r\n      return {\r\n        ...state,\r\n        following: [...payload],\r\n        loading: false\r\n      };\r\n\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./reducers/auth\";\r\nimport tweet from \"./reducers/tweet\";\r\nimport profile from \"./reducers/profile\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  tweet,\r\n  profile\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider, useSelector } from \"react-redux\";\n\n// Routes\nimport PrivateRoute from \"./component/routing/PrivateRoute\";\n\n// Components\nimport Navbar from \"./component/layout/Navbar\";\nimport Drawer from \"./component/layout/Drawer\";\nimport Landing from \"./component/layout/Landing\";\nimport Login from \"./component/auth/Login\";\nimport Register from \"./component/auth/Register\";\nimport ProfileContainer from \"./component/profile/ProfileContainer\";\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport Profiles from \"./component/Profiles/Profiles\";\nimport Profile from \"./component/profile/Profile\";\nimport Followers from \"./component/Profiles/Followers\";\nimport Following from \"./component/Profiles/Following\";\nimport Setting from \"./component/profile/Setting\";\n\n// Redux\nimport store from \"./Redux/store\";\nimport { loadUser } from \"./Redux/actions/auth\";\nimport { getAllTweets } from \"./Redux/actions/tweet\";\n\n// utils\nimport setAuthToken from \"./utils/setAuthToken\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(getAllTweets());\n  }, []);\n\n  // console.log(moment(moment() + 36e5 * 5).twitter());\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Drawer />\n\n          <Route exact path='/landing' component={Dashboard} />\n\n          <Switch>\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/Login' component={Login} />\n            <PrivateRoute exact path='/profile' component={ProfileContainer} />\n            <PrivateRoute exact path='/profile/:id' component={Profile} />\n            <PrivateRoute exact path='/profiles' component={Profiles} />\n            <PrivateRoute exact path='/dashboard' component={Dashboard} />\n            <PrivateRoute exact path='/followers' component={Followers} />\n            <PrivateRoute exact path='/following' component={Following} />\n            <PrivateRoute exact path='/setting' component={Setting} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\n// Create a theme instance.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1976d2\"\r\n    },\r\n    secondary: {\r\n      main: \"#dc004e\"\r\n    },\r\n    error: {\r\n      main: red.A400\r\n    },\r\n    update: {\r\n      main: \"#6a197d\"\r\n    },\r\n    background: {\r\n      default: \"#fff\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/raga.67a6b642.jpg\";"],"sourceRoot":""}